@page "/cart"
@rendermode InteractiveServer
@inject IToastService toastService

<br />
<br />
<br />

@if(cart.Count == 0)
{
    <h3>Корзина пуста</h3>
}

@if (cart.Count > 0)
{
    @foreach (Item item in cart)
    {
        <div class="item">
            <a href="/product?id=@item.Id"><h3>@item.Name</h3></a>

            <p>Описание: @item.Description</p>
            <p>Цена: @item.Price</p>
            <img class="item-img" src="@item.ImgUrl" />
            <button class="btn btn-danger" @onclick="(() => DeleteFromCart(item.Id))">Удалить из корзины</button>
        </div>
        <hr />
    }

    <br />
    <button class="btn btn-primary" @onclick="Buy">Оформить заказ</button>
}

@code {
    private List<Item> cart = new List<Item>();

    protected override void OnInitialized()
    {
        cart = Catalog.GetItemsFromCart();
    }

    private void DeleteFromCart(int id)
    {
        Catalog.RemoveItemFromCart(id);
        cart = Catalog.GetItemsFromCart();
    }

    private void Buy()
    {
        var options = new DbContextOptionsBuilder<AppDBContext>()
            .UseSqlite("Data Source=store.db").Options;
        using (var dbContext = new AppDBContext(options))
        {
            foreach (Item itm in cart)
            {
                var order = new Order();
                order.ItemId = itm.Id;
                order.CustomerId = -1;
                order.Date = DateTime.Now.ToString("G");
                dbContext.Orders.Add(order);
                dbContext.SaveChanges();
                Catalog.RemoveItemFromCart(itm.Id);
            }
        }
        toastService.ShowInfo("Заказ оформлен");
        cart = Catalog.GetItemsFromCart();
    }
}
